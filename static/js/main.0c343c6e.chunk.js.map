{"version":3,"sources":["Components/Api.js","Components/DropdownCategories.js","StateProvider.js","Components/SearchBox.js","Components/Navbar.js","Components/MovieItem.js","Components/MoviesGrid.js","Components/MainPage.js","Components/MoviePage.js","firebase.js","Components/Footer.js","Components/ArabicMovie.js","Components/TopRated.js","Components/Upcoming.js","Components/NowPlaying.js","Components/ActorPage.js","App.js","serviceWorker.js","index.js","images/logo.webp"],"names":["constructUrl","path","query","queryText","DropdownCategories","props","SEARCH_URL_CATEGORIES","useState","categories","setCategories","useEffect","fetch","then","res","json","data","undefined","genres","id","name","catch","err","console","log","Dropdown","style","marginRight","Toggle","className","category","Menu","length","map","Item","href","key","onSelect","setCategory","StateContext","createContext","StateProvider","useReducer","reducer","initialState","state","dispatch","Provider","value","children","isLoading","movies","action","type","payload","SearchBox","useContext","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","searchQuery","has","get","categoryId","parseInt","categoryName","setQuery","listOfPredicates","setListOfPredicates","autoComplit","results","SEARCH_URL","filter","movie","genre_ids","includes","fetchMovies","Form","inline","onSubmit","event","preventDefault","push","pathname","flexFlow","FormControl","placeholder","onChange","e","target","list","item","original_title","Button","marginLeft","Spinner","animation","variant","size","Navbar","expand","to","Brand","src","logo","alt","width","height","aria-controls","Collapse","Nav","MovieItem","Card","Img","backdrop_path","Body","Title","title","fontSize","substr","Badge","release_date","vote_average","MoviesGrid","Row","md","lg","xs","Col","MainPage","MoviePage","setMovie","trailers","setTrailers","actors","setActors","movie_id","match","params","a","resTrailer","dataTrailer","tmp","trailer","resActors","dataActors","cast","fetchData","baseUrl","nullPhoto","posterImage","poster_path","backgroundImage","backgroundSize","position","Container","sm","fontWeight","tagline","overview","genre","align","Carousel","zIndex","v","i","url","actor","margin","profile_path","minHeight","objectFit","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseRef","firestore","collection","Footer","email","message","feedback","setFeedback","icon","faLinkedin","faGithubSquare","faTwitterSquare","add","Group","controlId","Label","Control","required","as","rows","float","ArabicMovie","setMovies","items","TopRated","Upcoming","NowPlaying","ActorPage","actorId","person","setPerson","profileImage","onClick","goBack","faArrowLeft","birthday","place_of_birth","biography","App","component","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.0c343c6e.chunk.js","sourcesContent":["const TMDB_BASE_URL = `https://api.themoviedb.org/3`;\r\nconst API_KEY = '542003918769df50083a13c415bbc602';\r\n\r\nexport function constructUrl(path, query) {\r\n  const queryText = query ? `&query=${query}` : '';\r\n  return `${TMDB_BASE_URL}/${path}?api_key=${API_KEY}` + queryText;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { constructUrl } from './Api';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\nexport default function DropdownCategories(props) {\r\n  const SEARCH_URL_CATEGORIES = constructUrl('genre/movie/list', '');\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(SEARCH_URL_CATEGORIES)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.genres !== undefined)\r\n          setCategories([{ id: 0, name: 'All' }, ...data.genres]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [SEARCH_URL_CATEGORIES]);\r\n\r\n  return (\r\n    <Dropdown style={{ marginRight: '5px' }}>\r\n      <Dropdown.Toggle id=\"dropdown-basic\" className=\"button-style bg-orange\">\r\n        {props.category.name || 'Categories'}\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu className=\"bg-black\">\r\n        {categories.length > 0 &&\r\n          categories.map((category) => (\r\n            <Dropdown.Item\r\n              href=\"#\"\r\n              key={category.id}\r\n              onSelect={() => props.setCategory(category)}\r\n              className=\"menu-item-style\"\r\n            >\r\n              {category.name}\r\n            </Dropdown.Item>\r\n          ))}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\n","import React, { useReducer, createContext } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <StateContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  movies: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"setLoading\":\r\n      return { ...state, isLoading: action.payload };\r\n    case \"setMovies\":\r\n      state.movies=action.payload;\r\n      return state  ;\r\n    default:\r\n      return state ;\r\n  }\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Button, Form, FormControl, Spinner } from 'react-bootstrap';\r\nimport DropdownCategories from './DropdownCategories';\r\nimport { constructUrl } from './Api';\r\nimport { StateContext } from '../StateProvider';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nexport default function SearchBox() {\r\n  const [state, dispatch] = useContext(StateContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const searchQuery = searchParams.has('query')\r\n    ? searchParams.get('query')\r\n    : '';\r\n  const categoryId = searchParams.has('categoryId')\r\n    ? parseInt(searchParams.get('categoryId'))\r\n    : 0;\r\n  const categoryName = searchParams.has('categoryName')\r\n    ? searchParams.get('categoryName')\r\n    : 'All';\r\n\r\n  const [category, setCategory] = useState({\r\n    id: categoryId,\r\n    name: categoryName,\r\n  });\r\n\r\n  const changeCategory = (category) => {\r\n    setCategory(category);\r\n  };\r\n\r\n  const [query, setQuery] = useState(searchQuery);\r\n\r\n  const onChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch({ type: 'setMovies', payload: [] });\r\n\r\n    dispatch({ type: 'setLoading', payload: true });\r\n\r\n    history.push({\r\n      pathname: '/search',\r\n      search:\r\n        '?query=' +\r\n        query +\r\n        '&categoryId=' +\r\n        category.id +\r\n        '&categoryName=' +\r\n        category.name,\r\n    });\r\n  };\r\n\r\n  const [listOfPredicates, setListOfPredicates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let autoComplit;\r\n    if (query !== '') {\r\n      autoComplit = constructUrl('search/multi', query);\r\n    }\r\n\r\n    fetch(autoComplit)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setListOfPredicates(data.results);\r\n      });\r\n    console.log(listOfPredicates);\r\n  }, [query]);\r\n\r\n  useEffect(() => fetchMovies(searchQuery), [searchQuery, categoryId]);\r\n\r\n  function fetchMovies(query = '') {\r\n    let SEARCH_URL;\r\n    if (query !== '') {\r\n      SEARCH_URL = constructUrl('search/movie', query);\r\n    } else {\r\n      SEARCH_URL = constructUrl('movie/popular');\r\n    }\r\n\r\n    fetch(SEARCH_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.results !== undefined) {\r\n          let movies = data.results;\r\n          if (category.id) {\r\n            movies = movies.filter((movie) =>\r\n              movie.genre_ids.includes(category.id)\r\n            );\r\n          }\r\n\r\n          dispatch({ type: 'setMovies', payload: movies });\r\n        }\r\n        dispatch({ type: 'setLoading', payload: false });\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <Form inline onSubmit={onSubmit} style={{ flexFlow: 'row' }}>\r\n      <DropdownCategories category={category} setCategory={changeCategory} />\r\n\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={query}\r\n        onChange={onChange}\r\n        list=\"data\"\r\n      />\r\n      <datalist id=\"data\">\r\n        {listOfPredicates.map((item, key) => (\r\n          <option key={key} value={item.original_title} />\r\n        ))}\r\n      </datalist>\r\n\r\n      <Button type=\"submit\" className=\"bg-orange\" style={{ marginLeft: '5px' }}>\r\n        Search\r\n        <span>\r\n          {state.isLoading ? (\r\n            <Spinner animation=\"border\" variant=\"dark\" size=\"sm\" />\r\n          ) : (\r\n            ' '\r\n          )}\r\n        </span>\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Navbar as NavBarBootstarp, Nav } from 'react-bootstrap';\r\nimport SearchBox from './SearchBox';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../images/logo.webp';\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <NavBarBootstarp expand=\"lg\" className=\"flex-shrink-1 navbar-style\">\r\n      <Link to=\"/\">\r\n        <NavBarBootstarp.Brand className=\"white-color\">\r\n          <img src={logo} alt=\"fav icon\" width=\"30\" height=\"30\" />\r\n        </NavBarBootstarp.Brand>\r\n      </Link>\r\n      <NavBarBootstarp.Toggle aria-controls=\"basic-Navbar-nav\" />\r\n      <NavBarBootstarp.Collapse id=\"basic-Navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link to=\"/\" className=\"white-color links titles\">\r\n            Home &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Link>\r\n          <Link to=\"/arabic_movies\" className=\"white-color links titles\">\r\n            Arabic Movie &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Link>\r\n          <Link to=\"/upcoming\" className=\"white-color links titles\">\r\n            Upcoming &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Link>\r\n          <Link to=\"/top_rated\" className=\"white-color links titles\">\r\n            Top Rated &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Link>\r\n          <Link to=\"/now_playing\" className=\"white-color links titles pb-1\">\r\n            Now Playing &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Link>\r\n        </Nav>\r\n\r\n        <SearchBox />\r\n      </NavBarBootstarp.Collapse>\r\n    </NavBarBootstarp>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Card, Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function MovieItem(props) {\r\n  const baseUrl = 'https://image.tmdb.org/t/p/w500/';\r\n  const nullPhoto =\r\n    'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled-1150x647.png';\r\n\r\n  return (\r\n    <Link to={`/Movie/${props.movie.id}`} className=\"links\">\r\n      <Card key={props.movie.id} style={{ width: '100%', height: '100%' }}>\r\n        <Card.Img\r\n          src={\r\n            props.movie.backdrop_path !== null\r\n              ? baseUrl + props.movie.backdrop_path\r\n              : nullPhoto\r\n          }\r\n          className=\"height-image-card\"\r\n        />\r\n        <Card.Body>\r\n          <Card.Title\r\n            title={props.movie.title}\r\n            className=\"white-color titles\"\r\n            style={{ fontSize: '18px' }}\r\n          >\r\n            {`${props.movie.title}`.substr(0, 20)}\r\n            {props.movie.title.length >= 20 ? '...' : ''}\r\n          </Card.Title>\r\n          <div className=\"badges-place\">\r\n            <Badge className=\"white-color bg-orange\">\r\n              {props.movie.release_date}\r\n            </Badge>\r\n            <Badge className=\"white-color bg-orange\">\r\n              Rating: ({props.movie.vote_average})\r\n            </Badge>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport MovieItem from './MovieItem';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { StateContext } from '../StateProvider';\r\n\r\nexport default function MoviesGrid() {\r\n  const [state] = useContext(StateContext);\r\n\r\n  return (\r\n    <div className=\"flex-grow-1 container my-4\">\r\n      <Row md={3} lg={4} xs={1}>\r\n        {state.movies.map((movie) => (\r\n          <Col key={movie.id} className=\"my-3\">\r\n            <MovieItem movie={movie} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport MoviesGrid from \"./MoviesGrid\";\r\nimport { StateContext } from \"../StateProvider\";\r\nfunction MainPage() {\r\n  const [state] = useContext(StateContext);\r\n  return <>{!state.isLoading  && <MoviesGrid />}</>;\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { constructUrl } from './Api';\r\nimport {\r\n  Button,\r\n  Badge,\r\n  Container,\r\n  Row,\r\n  Spinner,\r\n  Col,\r\n  Carousel,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport ReactPlayer from 'react-player';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function MoviePage(props) {\r\n  const history = useHistory();\r\n  const [movie, setMovie] = useState('');\r\n  const [trailers, setTrailers] = useState([]);\r\n  const [actors, setActors] = useState([]);\r\n\r\n  let movie_id = props.match.params.id;\r\n  let SEARCH_URL;\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // You can await here\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      SEARCH_URL = constructUrl(`movie/${movie_id}`);\r\n      let res = await fetch(SEARCH_URL);\r\n      let data = await res.json();\r\n\r\n      SEARCH_URL = constructUrl(`movie/${movie_id}/videos`);\r\n      let resTrailer = await fetch(SEARCH_URL);\r\n      let dataTrailer = await resTrailer.json();\r\n      const tmp = [];\r\n      dataTrailer.results.map(function (trailer) {\r\n        tmp.push(`https://www.youtube.com/watch?v=${trailer.key}`);\r\n        return tmp;\r\n      });\r\n      setTrailers(tmp);\r\n\r\n      SEARCH_URL = constructUrl(`movie/${movie_id}/credits`);\r\n      let resActors = await fetch(SEARCH_URL);\r\n      let dataActors = await resActors.json();\r\n      let actors = dataActors.cast;\r\n\r\n      setActors(actors);\r\n      setMovie(data);\r\n    }\r\n    fetchData();\r\n  }, [movie_id]);\r\n\r\n  const baseUrl = 'https://image.tmdb.org/t/p/original';\r\n  const nullPhoto =\r\n    'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled-1150x647.png';\r\n\r\n  const posterImage = movie.poster_path\r\n    ? baseUrl + movie.poster_path\r\n    : nullPhoto;\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"flex-grow-1\"\r\n        style={{\r\n          backgroundImage: `url(${\r\n            movie.backdrop_path !== null\r\n              ? `https://image.tmdb.org/t/p/original${movie.backdrop_path}`\r\n              : nullPhoto\r\n          })`,\r\n          backgroundSize: 'cover',\r\n          width: '100%',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <div className=\"mask\">\r\n          {/* <Button onClick={() => history.goBack()} className=\"bg-orange m-2\">\r\n            <FontAwesomeIcon\r\n              icon={faArrowLeft}\r\n              style={{ fontSize: '20px' }}\r\n              className=\"white-color\"\r\n            />\r\n          </Button> */}\r\n        </div>\r\n        {movie.id && (\r\n          <Container>\r\n            <Row>\r\n              <Col className=\"col-4 my-5\" md={4} lg={5} sm={12} xs={12}>\r\n                <img width=\"100%\" alt=\"posterImage\" src={posterImage} />\r\n                <Col className=\"play\">\r\n                  <a\r\n                    href=\"https://www.netflix.com/iq-en/\"\r\n                    className=\"play-link\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <p className=\"scale-text\">WATCH NOW</p>\r\n                  </a>\r\n                </Col>\r\n              </Col>\r\n              <Col\r\n                className=\"col-6 text-white my-5\"\r\n                md={6}\r\n                lg={7}\r\n                sm={12}\r\n                xs={12}\r\n              >\r\n                <h1>{movie.original_title}</h1>\r\n                <small style={{ fontWeight: 'lighter' }}>\r\n                  <em>{movie.tagline}</em>\r\n                </small>\r\n                <br /> <br />\r\n                <h3>Overview:</h3>\r\n                <h5>\" {movie.overview} \"</h5>\r\n                <br />\r\n                <br />\r\n                {movie.genres\r\n                  ? movie.genres.map((genre) => {\r\n                      return (\r\n                        <Badge\r\n                          style={{ marginRight: '20px', marginLeft: '10px' }}\r\n                          className=\"bg-orange\"\r\n                        >\r\n                          {genre.name}\r\n                        </Badge>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        )}\r\n        {!movie.id && (\r\n          <Spinner animation=\"border\" variant=\"warning\" size=\"sm\" />\r\n        )}\r\n      </div>\r\n      <div className=\"my-5\">\r\n        <Col sm={12} className=\"CarouselCol\" align=\"middle\">\r\n          <Carousel className=\"Carousel\" style={{ zIndex: 3 }}>\r\n            {trailers.map((v, i) => {\r\n              return (\r\n                <Carousel.Item>\r\n                  <ReactPlayer width=\"100%\" key={`haha-${i}`} url={v} />\r\n                </Carousel.Item>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        </Col>\r\n      </div>\r\n\r\n      <div className=\"card-container m-3\">\r\n        {actors.map((actor) => {\r\n          return (\r\n            <Link\r\n              key={actor.id}\r\n              to={`/person/${actor.id}`}\r\n              className=\"links\"\r\n              style={{ margin: '15px 8px 8px 8px ' }}\r\n            >\r\n              <Card\r\n                key={'1' + actor.id}\r\n                style={{ width: '150px' }}\r\n                className=\"mb-4\"\r\n              >\r\n                <Card.Img\r\n                  src={\r\n                    actor.profile_path !== null\r\n                      ? baseUrl + actor.profile_path\r\n                      : nullPhoto\r\n                  }\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '15wh',\r\n                    minHeight: '220px',\r\n                    objectFit: 'cover',\r\n                  }}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title\r\n                    className=\"white-color titles\"\r\n                    style={{ fontSize: '13px' }}\r\n                  >\r\n                    {`${actor.name}`.substr(0, 14)}\r\n                    {actor.name.length >= 16 ? '...' : ''}\r\n                  </Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyDLdrDkCBfKYQHRbZAAuCPAK3t2DvIEaok',\r\n  authDomain: 'movie-cdf3c.firebaseapp.com',\r\n  projectId: 'movie-cdf3c',\r\n  storageBucket: 'movie-cdf3c.appspot.com',\r\n  messagingSenderId: '489305636668',\r\n  appId: '1:489305636668:web:13c74274c625c6b2b1e839',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst database = firebase.firestore();\r\n\r\nexport const databaseRef = database.collection('movie');\r\n\r\nexport default firebase;\r\n","/* eslint-disable react/jsx-no-target-blank */\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { databaseRef } from '../firebase';\r\n\r\nimport {\r\n  faLinkedin,\r\n  faTwitterSquare,\r\n  faGithubSquare,\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nfunction Footer() {\r\n  const [feedback, setFeedback] = useState({\r\n    email: '',\r\n    message: '',\r\n  });\r\n\r\n  const handleEmail = (e) =>\r\n    setFeedback({ ...feedback, email: e.target.value });\r\n  const handleMessage = (e) =>\r\n    setFeedback({ ...feedback, message: e.target.value });\r\n  //set\r\n  const addFeedback = (e) => {\r\n    e.preventDefault();\r\n    databaseRef.add({\r\n      email: feedback.email,\r\n      message: feedback.message,\r\n    });\r\n    setFeedback({ email: '', message: '' });\r\n  };\r\n\r\n  return (\r\n    <footer className=\"text-light footer-style\">\r\n      <Row className=\"mx-1 my-3\">\r\n        <Col lg={6} md={6} xs={12} className=\"pb-5\">\r\n          <h3>Find Us</h3>\r\n          <div>\r\n            <a href=\"https://www.linkedin.com/in/hanandlshad/\" target=\"_blank\">\r\n              <FontAwesomeIcon\r\n                icon={faLinkedin}\r\n                style={{ fontSize: '25px' }}\r\n                className=\"white-color\"\r\n              />\r\n            </a>\r\n            <a href=\"https://github.com/7ananDlshad\" target=\"_blank\">\r\n              <FontAwesomeIcon\r\n                icon={faGithubSquare}\r\n                style={{ fontSize: '25px' }}\r\n                className=\"white-color mx-3\"\r\n              />\r\n            </a>\r\n\r\n            <a href=\"https://twitter.com/7ananTaha\" target=\"_blank\">\r\n              <FontAwesomeIcon\r\n                icon={faTwitterSquare}\r\n                style={{ fontSize: '25px' }}\r\n                className=\"white-color\"\r\n              />\r\n            </a>\r\n          </div>\r\n          <h3 className=\"mt-5\">E-mail</h3>\r\n          <div>\r\n            <p>info@movie.com</p>\r\n          </div>\r\n        </Col>\r\n        <Col lg={6} md={6} xs={12}>\r\n          <h3 className=\"mb-3\">Contact Us</h3>\r\n          <Form onSubmit={addFeedback}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Your Email\"\r\n                value={feedback.email}\r\n                onChange={handleEmail}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Message</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={5}\r\n                placeholder=\"write Your Message\"\r\n                value={feedback.message}\r\n                onChange={handleMessage}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" style={{ float: 'right' }}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { constructUrl } from './Api';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Card, Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ArabicMovie() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  let SEARCH_URL;\r\n\r\n  const baseUrl = 'https://image.tmdb.org/t/p/original/';\r\n  const nullPhoto =\r\n    'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled-1150x647.png';\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // You can await here\r\n      SEARCH_URL = constructUrl('list/457');\r\n      let res = await fetch(SEARCH_URL);\r\n      let data = await res.json();\r\n\r\n      setMovies(data.items);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className=\"flex-grow-1 container my-4\">\r\n      <Row md={3} lg={4} xs={1}>\r\n        {movies.map((movie) => (\r\n          <Col key={movie.id} className=\"my-3\">\r\n            <Link to={`/Movie/${movie.id}`} className=\"links\">\r\n              <Card key={movie.id} style={{ width: '100%', height: '100%' }}>\r\n                <Card.Img\r\n                  src={\r\n                    movie.poster_path !== null\r\n                      ? baseUrl + movie.poster_path\r\n                      : nullPhoto\r\n                  }\r\n                  className=\"height-image-card\"\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title\r\n                    title={movie.title}\r\n                    className=\"white-color titles\"\r\n                    style={{ fontSize: '18px' }}\r\n                  >\r\n                    {`${movie.title}`.substr(0, 20)}\r\n                    {movie.title.length >= 20 ? '...' : ''}\r\n                  </Card.Title>\r\n                  <div className=\"badges-place\">\r\n                    <Badge className=\"white-color bg-orange\">\r\n                      {movie.release_date}\r\n                    </Badge>\r\n                    <Badge className=\"white-color bg-orange\">\r\n                      Rating: ({movie.vote_average})\r\n                    </Badge>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default ArabicMovie;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { constructUrl } from './Api';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Card, Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction TopRated() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  let SEARCH_URL;\r\n\r\n  const baseUrl = 'https://image.tmdb.org/t/p/original/';\r\n  const nullPhoto =\r\n    'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled-1150x647.png';\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // You can await here\r\n      SEARCH_URL = constructUrl('movie/top_rated');\r\n      let res = await fetch(SEARCH_URL);\r\n      let data = await res.json();\r\n\r\n      setMovies(data.results);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movies);\r\n  return (\r\n    <div className=\"flex-grow-1 container my-4\">\r\n      <Row md={3} lg={4} xs={1}>\r\n        {movies.map((movie) => (\r\n          <Col key={movie.id} className=\"my-3\">\r\n            <Link to={`/Movie/${movie.id}`} className=\"links\">\r\n              <Card key={movie.id} style={{ width: '100%', height: '100%' }}>\r\n                <Card.Img\r\n                  src={\r\n                    movie.poster_path !== null\r\n                      ? baseUrl + movie.poster_path\r\n                      : nullPhoto\r\n                  }\r\n                  className=\"height-image-card\"\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title\r\n                    title={movie.title}\r\n                    className=\"white-color titles\"\r\n                    style={{ fontSize: '18px' }}\r\n                  >\r\n                    {`${movie.title}`.substr(0, 20)}\r\n                    {movie.title.length >= 20 ? '...' : ''}\r\n                  </Card.Title>\r\n                  <div className=\"badges-place\">\r\n                    <Badge className=\"white-color bg-orange\">\r\n                      {movie.release_date}\r\n                    </Badge>\r\n                    <Badge className=\"white-color bg-orange\">\r\n                      Rating: ({movie.vote_average})\r\n                    </Badge>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default TopRated;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { constructUrl } from './Api';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Card, Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Upcoming() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  let SEARCH_URL;\r\n\r\n  const baseUrl = 'https://image.tmdb.org/t/p/original/';\r\n  const nullPhoto =\r\n    'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled-1150x647.png';\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // You can await here\r\n      SEARCH_URL = constructUrl('movie/upcoming');\r\n      let res = await fetch(SEARCH_URL);\r\n      let data = await res.json();\r\n\r\n      setMovies(data.results);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movies);\r\n  return (\r\n    <div className=\"flex-grow-1 container my-4\">\r\n      <Row md={3} lg={4} xs={1}>\r\n        {movies.map((movie) => (\r\n          <Col key={movie.id} className=\"my-3\">\r\n            <Link to={`/Movie/${movie.id}`} className=\"links\">\r\n              <Card key={movie.id} style={{ width: '100%', height: '100%' }}>\r\n                <Card.Img\r\n                  src={\r\n                    movie.poster_path !== null\r\n                      ? baseUrl + movie.poster_path\r\n                      : nullPhoto\r\n                  }\r\n                  className=\"height-image-card\"\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title\r\n                    title={movie.title}\r\n                    className=\"white-color titles\"\r\n                    style={{ fontSize: '18px' }}\r\n                  >\r\n                    {`${movie.title}`.substr(0, 20)}\r\n                    {movie.title.length >= 20 ? '...' : ''}\r\n                  </Card.Title>\r\n                  <div className=\"badges-place\">\r\n                    <Badge className=\"white-color bg-orange\">\r\n                      {movie.release_date}\r\n                    </Badge>\r\n                    <Badge className=\"white-color bg-orange\">\r\n                      Rating: ({movie.vote_average})\r\n                    </Badge>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default Upcoming;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { constructUrl } from './Api';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Card, Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NowPlaying() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  let SEARCH_URL;\r\n\r\n  const baseUrl = 'https://image.tmdb.org/t/p/original/';\r\n  const nullPhoto =\r\n    'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled-1150x647.png';\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // You can await here\r\n      SEARCH_URL = constructUrl('movie/now_playing');\r\n      let res = await fetch(SEARCH_URL);\r\n      let data = await res.json();\r\n\r\n      setMovies(data.results);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movies);\r\n  return (\r\n    <div className=\"flex-grow-1 container my-4\">\r\n      <Row md={3} lg={4} xs={1}>\r\n        {movies.map((movie) => (\r\n          <Col key={movie.id} className=\"my-3\">\r\n            <Link to={`/Movie/${movie.id}`} className=\"links\">\r\n              <Card key={movie.id} style={{ width: '100%', height: '100%' }}>\r\n                <Card.Img\r\n                  src={\r\n                    movie.poster_path !== null\r\n                      ? baseUrl + movie.poster_path\r\n                      : nullPhoto\r\n                  }\r\n                  className=\"height-image-card\"\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title\r\n                    title={movie.title}\r\n                    className=\"white-color titles\"\r\n                    style={{ fontSize: '18px' }}\r\n                  >\r\n                    {`${movie.title}`.substr(0, 20)}\r\n                    {movie.title.length >= 20 ? '...' : ''}\r\n                  </Card.Title>\r\n                  <div className=\"badges-place\">\r\n                    <Badge className=\"white-color bg-orange\">\r\n                      {movie.release_date}\r\n                    </Badge>\r\n                    <Badge className=\"white-color bg-orange\">\r\n                      Rating: ({movie.vote_average})\r\n                    </Badge>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default NowPlaying;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { constructUrl } from './Api';\r\nimport { Button, Container, Row, Spinner, Col } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function ActorPage(props) {\r\n  let actorId = props.match.params.actorId;\r\n  const history = useHistory();\r\n\r\n  const [person, setPerson] = useState({});\r\n  useEffect(() => {\r\n    const SEARCH_URL = constructUrl(`person/${actorId}`);\r\n    fetch(SEARCH_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => setPerson(data));\r\n  }, [actorId]);\r\n  const baseUrl = 'https://image.tmdb.org/t/p/w500/';\r\n  const nullPhoto =\r\n    'https://image.tmdb.org/t/p/w500/wwemzKWzjKYJFfCeiB57q3r4Bcm.png';\r\n\r\n  const profileImage = person.profile_path\r\n    ? baseUrl + person.profile_path\r\n    : nullPhoto;\r\n  console.log(person);\r\n  return (\r\n    <div className=\"flex-grow-1 \">\r\n      <Button onClick={() => history.goBack()} className=\"bg-orange m-2\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowLeft}\r\n          style={{ fontSize: '25px' }}\r\n          className=\"white-color \"\r\n        />\r\n      </Button>\r\n      {person.id && (\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"col-4\" md={4} lg={5} xs={12}>\r\n              <img\r\n                width=\"100%\"\r\n                alt=\"posterImage\"\r\n                src={profileImage}\r\n                className=\"mb-5\"\r\n              />\r\n            </Col>\r\n            <Col className=\"text-white\" md={8} lg={7} xs={12}>\r\n              <h1>{person.name}</h1>\r\n\r\n              <small>\r\n                <em>\r\n                  {person.birthday} , {person.place_of_birth}\r\n                </em>\r\n              </small>\r\n              <br />\r\n              <br />\r\n              <p>{person.biography}</p>\r\n              <br />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n      {!person.id && <Spinner animation=\"border\" variant=\"warning\" size=\"sm\" />}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Navbar from './Components/Navbar';\r\nimport MainPage from './Components/MainPage';\r\nimport MoviePage from './Components/MoviePage';\r\nimport Footer from './Components/Footer';\r\n\r\nimport ArabicMovie from './Components/ArabicMovie';\r\nimport TopRated from './Components/TopRated';\r\nimport Upcoming from './Components/Upcoming';\r\nimport NowPlaying from './Components/NowPlaying';\r\n\r\nimport ActorPage from './Components/ActorPage';\r\nimport { StateProvider } from './StateProvider';\r\nimport { Route, Redirect, Switch, HashRouter } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <StateProvider>\r\n      <HashRouter>\r\n        <div className=\"d-flex flex-column vh-100 align-items-stretch p-0 m-0\">\r\n          <Navbar />\r\n\r\n          <Switch>\r\n            <Route path=\"/iraq-bc-movies-project-students\">\r\n              <Redirect to=\"/\" />\r\n            </Route>\r\n            <Route path={'/Movie/:id'} component={MoviePage} />\r\n            <Route path={'/person/:actorId'} component={ActorPage} />\r\n            <Route exact path=\"/\" component={MainPage} />\r\n            <Route path=\"/search\" component={MainPage} />\r\n            <Route path=\"/arabic_movies\" component={ArabicMovie} />\r\n            <Route path=\"/top_rated\" component={TopRated} />\r\n            <Route path=\"/upcoming\" component={Upcoming} />\r\n            <Route path=\"/now_playing\" component={NowPlaying} />\r\n          </Switch>\r\n\r\n          <Footer />\r\n        </div>\r\n      </HashRouter>\r\n    </StateProvider>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.239676f7.webp\";"],"sourceRoot":""}